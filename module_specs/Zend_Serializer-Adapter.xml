<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
<!-- EN-Revision: 22743 -->
<sect1 id="zend.serializer.adapter">
    <title>Zend_Serializer_Adapter</title>

    <para>
        <classname>Zend_Serializer</classname> アダプターは少しの取り組みでシリアル化メソッドの
        違いの架け橋を作成します。
    </para>

    <para>
        全てのアダプターは賛否両論な違いを持っています。いくつかのケースにて、
        あらゆる <acronym>PHP</acronym> データタイプ(例えば、オブジェクト)が文字列表現へ変換できる
        訳ではありません。大抵のケースでは、シリアル化されたものと同様の型式へ変換されます。
        -- 例として、<acronym>PHP</acronym> オブジェクトはしばしば配列へとキャストされます。 
        もし失敗した場合、<classname>Zend_Serializer_Exception</classname> がスローされるでしょう。
    </para>

    <para>
        下記は利用可能なアダプターのリストです。
    </para>

    <sect2 id="zend.serializer.adapter.phpserialize">
        <title>Zend_Serializer_Adapter_PhpSerialize</title>

        <para>
            このアダプターは<acronym>PHP</acronym> 関数組み込みの <methodname>un/serialize</methodname> を
            使用します。これは良好なアダプターの初期選択です。
        </para>

        <para>
            このアダプターには設定オプションはありません。
        </para>
    </sect2>

    <sect2 id="zend.serializer.adapter.igbinary">
        <title>Zend_Serializer_Adapter_Igbinary</title>

        <para>
            <ulink url="http://opensource.dynamoid.com">Igbinary</ulink> は Sulake Dynamoid Oy によって
            リリースされたオープンソースソフトウェアです。これは標準の
            <acronym>PHP</acronym> シリアライザーを差し替えます。 
            テキスト表現に時間と空間を割く代わりに、igbinary は <acronym>PHP</acronym> 
            データ構造を凝縮されたバイナリ形式にて保管します。シリアル化されたデータを
            memcached や類似したメモリーベースのストレージを使用するときは、節約は重要です。
        </para>

        <para>

        <para>
            このアダプターを使用するには <acronym>PHP</acronym>
            拡張モジュールがあなたのシステムにインストールされていなければいけません。
        </para>

        <para>
            このアダプターは設定オプションをとりません。
        </para>
    </sect2>

    <sect2 id="zend.serializer.adapter.wddx">
        <title>Zend_Serializer_Adapter_Wddx</title>

        <para>
            <ulink url="http://wikipedia.org/wiki/WDDX">WDDX</ulink> (Web Distributed Data eXchange)
            is a programming-language-, platform-, and transport-neutral data interchange mechanism
            for passing data between different environments and different computers.
        </para>
        <para>
            <ulink url="http://wikipedia.org/wiki/WDDX">WDDX</ulink> (Web Distributed Data eXchange)
            はプログラミング言語で、プラットフォームで、異なる環境や異なるコンピュータ間
            で渡されるデータの内部変換メカニズムでの転送用中立データです。
        <para>
            The adapter simply uses the <ulink
                url="http://php.net/manual/book.wddx.php">wddx_*()</ulink> <acronym>PHP</acronym>
            functions. Please read the <acronym>PHP</acronym> manual to determine how you may enable
            them in your <acronym>PHP</acronym> installation.
        </para>
        <para>
            アダプターは単に <acronym>PHP</acronym> 関数の <ulink
                url="http://php.net/manual/book.wddx.php">wddx_*()</ulink> を使用します。
            これらをあなたの <acronym>PHP</acronym> 環境にて可能にするには
            <acronym>PHP</acronym> マニュアルをお読み下さい。
        </para>

        <para>
            Additionally, the <ulink
                url="http://php.net/manual/book.simplexml.php">SimpleXML</ulink>
            <acronym>PHP</acronym> extension is used to check if a returned
            <constant>NULL</constant> value from <methodname>wddx_unserialize()</methodname> is
            based on a serialized <constant>NULL</constant> or on invalid data.
           </para>
           <!--
        <para>
            加えて, <acronym>PHP</acronym> 拡張モジュール <ulink
                url="http://php.net/manual/book.simplexml.php">SimpleXML</ulink>
            が <methodname>wddx_unserialize()</methodname>からの値が <constant>NULL</constant> を
            返却すると設定されていた場合、
            <constant>NULL</constant> 値のシリアル化されたものか不当なデータに基づいてます。
             
            <constant>NULL</constant> value from <methodname>wddx_unserialize()</methodname> is
            based on a serialized <constant>NULL</constant> or on invalid data.
        </para>
        -->

        <para>
            使用可能なオプションとして含まれているのは:
        </para>

        <table id="zend.serializer.adapter.wddx.table.options">
            <title>Zend_Serializer_Adapter_Wddx Options</title>

            <tgroup cols="4">
                 <thead>
                    <row>
                          <entry>オプション</entry>
                          <entry>データ方</entry>
                          <entry>デフォルト値</entry>
                          <entry>詳細</entry>
                    </row>
                 </thead>

                 <tbody>
                      <row>
                          <entry><emphasis>コメント</emphasis></entry>
                          <entry><type>文字列</type></entry>
                          <entry></entry>
                          <entry>パケットヘッダー内に表されるオプションコメント</entry>
                      </row>
                  </tbody>
             </tgroup>
        </table>
    </sect2>

    <sect2 id="zend.serializer.adapter.json">
        <title>Zend_Serializer_Adapter_Json</title>

        <para>
            <acronym>JSON</acronym> アダプターは <classname>Zend_Json</classname> コンポー
            ネント そして/あるいは json拡張モジュールへの架け橋を提供します。より詳しくは <link
                linkend= "zend.json.introduction">Zend_Json ドキュメント</link> を
            をお読みください。
        </para>


        <para>
            利用可能なオプションは次の通りです:
        </para>

        <table id="zend.serializer.adapter.json.table.options">
            <title>Zend_Serializer_Adapter_Json Options</title>

            <tgroup cols="4">
                 <thead>
                      <row>
                        <entry>Option</entry>
                        <entry>Data Type</entry>
                        <entry>Default Value</entry>
                        <entry>Description</entry>
                    </row>
                 </thead>

                 <tbody>
                      <row>
                          <entry><emphasis>cycleCheck</emphasis></entry>
                          <entry><type>boolean</type></entry>
                          <entry>false</entry>
                          <entry>
                            <link linkend="zend.json.advanced.objects1">このセクション</link> 参照
                          </entry>
                      </row>

                      <row>
                          <entry><emphasis>objectDecodeType</emphasis></entry>
                          <entry><type>Zend_Json::TYPE_*</type></entry>
                          <entry>Zend_Json::TYPE_ARRAY</entry>
                          <entry>
                             <link linkend= "zend.json.advanced.objects1">このセクション</link> 参照
                          </entry>
                      </row>

                      <row>
                          <entry><emphasis>enableJsonExprFinder</emphasis></entry>
                          <entry><type>boolean</type></entry>
                          <entry>false</entry>
                          <entry>
                            <link linkend= "zend.json.advanced.expr">このセクション</link> 参照
                          </entry>
                      </row>
                  </tbody>
             </tgroup>
        </table>
    </sect2>

    <sect2 id="zend.serializer.adapter.amf03">
        <title>Zend_Serializer_Adapter_Amf 0 and 3</title>

        <para>
            <acronym>AMF</acronym> アダプター <classname>Zend_Serializer_Adapter_Amf0</classname>
            と <classname>Zend_Serializer_Adapter_Amf3</classname>は、<classname>Zend_Amf</classname> コンポーネント
            のシリアライザーとの架け橋を提供します。より詳しくは <link
                linkend= "zend.amf.introduction">Zend_Amf ドキュメント</link> を
            をお読みください。
        </para>

        <para>
            これらのアダプターにはオプションはありません。
        </para>
    </sect2>

    <sect2 id="zend.serializer.adapter.pythonpickle">
        <title>Zend_Serializer_Adapter_PythonPickle</title>

        <para>
            This adapter converts <acronym>PHP</acronym> types to a <ulink
                url="http://docs.python.org/library/pickle.html">Python Pickle</ulink> string
            representation. With it, you can read the serialized data with Python and read Pickled
            data of Python with <acronym>PHP</acronym>.
        </para>

        <para>
            Available options include:
        </para>

        <table id="zend.serializer.adapter.pythonpickle.table.options">
            <title>Zend_Serializer_Adapter_PythonPickle Options</title>

            <tgroup cols="4">
                 <thead>
                      <row>
                        <entry>Option</entry>
                        <entry>Data Type</entry>
                        <entry>Default Value</entry>
                        <entry>Description</entry>
                    </row>
                 </thead>

                 <tbody>
                      <row>
                          <entry><emphasis>protocol</emphasis></entry>
                          <entry><type>integer</type> (0 | 1 | 2 | 3)</entry>
                          <entry>0</entry>

                          <entry>
                               The Pickle protocol version used on
                               <methodname>serialize</methodname>
                          </entry>
                      </row>
                  </tbody>
             </tgroup>
        </table>

        <para>
            Datatype merging (PHP to Python) occurs as follows:
        </para>

        <table id="zend.serializer.adapter.pythonpickle.table.php2python">
            <title>Datatype merging (PHP to Python)</title>

            <tgroup cols="2">
                 <thead>
                      <row>
                        <entry>PHP Type</entry>
                        <entry>Python Type</entry>
                    </row>
                 </thead>

                 <tbody>
                      <row>
                          <entry><type>NULL</type></entry>
                          <entry><type>None</type></entry>
                      </row>

                      <row>
                          <entry><type>boolean</type></entry>
                          <entry><type>boolean</type></entry>
                      </row>

                      <row>
                          <entry><type>integer</type></entry>
                          <entry><type>integer</type></entry>
                      </row>

                      <row>
                          <entry><type>float</type></entry>
                          <entry><type>float</type></entry>
                      </row>

                      <row>
                          <entry><type>string</type></entry>
                          <entry><type>string</type></entry>
                      </row>

                      <row>
                          <entry><type>array</type></entry>
                          <entry><type>list</type></entry>
                      </row>

                      <row>
                          <entry><type>associative array</type></entry>
                          <entry><type>dictionary</type></entry>
                      </row>

                      <row>
                          <entry><type>object</type></entry>
                          <entry><type>dictionary</type></entry>
                      </row>
                  </tbody>
             </tgroup>
        </table>

        <para>
            Datatype merging (Python to <acronym>PHP</acronym>) occurs per the following:
        </para>

        <table id="zend.serializer.adapter.pythonpickle.table.python2php">
            <title>Datatype merging (Python to PHP)</title>

            <tgroup cols="2">
                 <thead>
                      <row>
                        <entry>Python-Type</entry>
                        <entry>PHP-Type</entry>
                    </row>
                 </thead>

                 <tbody>
                      <row>
                          <entry><type>None</type></entry>
                          <entry><type>NULL</type></entry>
                      </row>

                      <row>
                          <entry><type>boolean</type></entry>
                          <entry><type>boolean</type></entry>
                      </row>

                      <row>
                          <entry><type>integer</type></entry>
                          <entry><type>integer</type></entry>
                      </row>

                      <row>
                          <entry><type>long</type></entry>

                          <entry>
                              <type>integer</type> | <type>float</type> | <type>string</type>
                              | <classname>Zend_Serializer_Exception</classname>
                          </entry>
                      </row>

                      <row>
                          <entry><type>float</type></entry>
                          <entry><type>float</type></entry>
                      </row>

                      <row>
                          <entry><type>string</type></entry>
                          <entry><type>string</type></entry>
                      </row>

                      <row>
                          <entry><type>bytes</type></entry>
                          <entry><type>string</type></entry>
                      </row>

                      <row>
                          <entry><type>Unicode string</type></entry>
                          <entry><type>UTF-8 string</type></entry>
                      </row>

                      <row>
                          <entry><type>list</type></entry>
                          <entry><type>array</type></entry>
                      </row>

                      <row>
                          <entry><type>tuple</type></entry>
                          <entry><type>array</type></entry>
                      </row>

                      <row>
                          <entry><type>dictionary</type></entry>
                          <entry><type>associative array</type></entry>
                      </row>

                      <row>
                          <entry>All other types</entry>
                          <entry><classname>Zend_Serializer_Exception</classname></entry>
                      </row>
                  </tbody>
             </tgroup>
        </table>
    </sect2>

    <sect2 id="zend.serializer.adapter.phpcode">
        <title>Zend_Serializer_Adapter_PhpCode</title>

        <para>
            このアダプターは <ulink url="http://php.net/manual/function.var-export.php">var_export()</ulink> を
            使用するパース可能な <acronym>PHP</acronym> コード形式を生成します。
            リストアする際に、 データには <ulink
                url="http://php.net/manual/function.eval.php">eval</ulink> が実行されるでしょう。
        </para>

        <para>
            このアダプターには設定オプションはありません。
        </para>

        <warning>
            <title>オブジェクトのアンシリアライズ</title>

            <para>
                オブジェクトは <ulink
                    url="http://php.net/manual/language.oop5.magic.php#language.oop5.magic.set-state">__set_state</ulink>
                マジックメソッドを使用してシリアル化されるでしょう。もしクラスがこのメソッドを実装してない場合、 
                致命的なエラー (fatal error) が実行時に発生するでしょう。
            </para>
        </warning>
        </warning>

        <warning>
            <title>eval() の使用</title>

            <para>
                <classname>PhpCode</classname> アダプターはアンシリアライズするために 
                <methodname>eval()</methodname>
                を利用します。これはパフォーマンスと新しいプロセスが実行される潜在的なセキュリティー問題
                を取り込みます。典型的に、シリアル化されたデータへの人への可読性に関わらず
                <methodname>PhpSerialize</methodname> アダプターを使用すべきです。
            </para>
        </warning>
    </sect2>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
